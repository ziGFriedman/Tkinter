'''Метод grid()'''
'''Grid является одним из трех менеджеров геометрии в Tkinter (другими являются уже
рассмотренный ранее Pack, а также Place). У всех виджетов есть соответствующий данному
менеджеру метод grid(). 'Grid' с английского переводится как 'сетка', однако по
смыслу правильнее говорить о таблице.

Табличный способ размещения предпочтителен из-за его гибкости и удобства, когда
дело доходит до разработки относительно сложных интерфейсов. Grid позволяет избежать
использования множества фреймов, что неизбежно в случае упаковщика Pack.

При размещении виджетов методом grid() родительский контейнер (обычно это окно)
условно разделяется на ячейки подобно таблице. Адрес каждой ячейки состоит из номера
строки и номера столбца. Нумерация начинается с нуля. Ячейки можно объединять как по
вертикали, так и по горизонтали.'''

'''Никаких предварительных команд по разбиению родительского виджета на ячейки не
выполняется. Tkinter делает это сам, исходя из указанных позиций виджетов.

Размещение виджета в той или иной ячейке задается через аргументы row и column,
которым присваиваются соответственно номера строки и столбца. Чтобы объединить ячейки
по горизонтали, используется атрибут columnspan, которому присваивается количество
объединяемых ячеек. Опция rowspan объединяет ячейки по вертикали.'''

from tkinter import *

root = Tk()

Label(text = 'Имя:').grid(row = 0, column = 0)
table_name = Entry(width = 30)
table_name.grid(row = 0, column = 1, columnspan = 3)

Label(text = 'Столбцов:').grid(row = 1, column = 0)
table_column = Spinbox(width = 7, from_ = 1, to = 50)
table_column.grid(row = 1, column = 1)
Label(text = 'Строк:').grid(row = 1, column = 2)
table_row = Spinbox(width = 7, from_ = 1, to = 100)
table_row.grid(row = 1, column = 3)

Button(text = 'Справка').grid(row = 2, column = 0)
Button(text = 'Вставить').grid(row = 2, column = 2)
Button(text = 'Отменить').grid(row = 2, column = 3)

root.mainloop()

# используются виджеты класса Spinbox, которые не рассматривались в курсе.
# Spinbox похож на Entry, но для него задается список принимаемых значений, и имеется
# подобие скроллера.

'''Теперь на помощь должны прийти другие свойства метода grid(). У него, также
как у pack(), имеются атрибуты для задания внешних и внутренних отступов (padx,
pady, ipadx, ipady).'''

'''Кроме этого есть атрибут sticky (липкий), который принимает значения направлений
сторон света (N, S, W, E, NW, NE, SW, SE). Если, например, указать NW, то виджет
прибьет к верхнему левому углу ячейки. Виджеты можно растягивать на весь объем ячейки
(sticky=N+S+W+E) или только по одной из осей (N+S или W+E). Эффект от 'липучки'
заметен, только если виджет меньше ячейки.'''

from tkinter import *

root = Tk()

Label(text = 'Имя:').grid(row = 0, column = 0, sticky = W, pady = 10, padx = 10)
table_name = Entry()
table_name.grid(row = 0, column = 1, columnspan = 3, sticky = W + E, padx = 10)

Label(text = 'Столбцов:').grid(row = 1, column = 0, sticky = W, padx = 10, pady = 10)
table_column = Spinbox(width = 7, from_ = 1, to = 50)
table_column.grid(row = 1, column = 1, padx = 10)

Label(text = 'Строк:').grid(row = 1, column = 2, sticky = E)
table_row  =  Spinbox(width = 7, from_ = 1, to = 100)
table_row.grid(row = 1, column = 3, sticky = E, padx = 10)

Button(text = 'Справка').grid(row = 2, column = 0, pady = 10, padx = 10)
Button(text = 'Вставить').grid(row = 2, column = 2)
Button(text = 'Отменить').grid(row = 2, column = 3, padx = 10)

root.mainloop()
