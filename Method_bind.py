'''Метод bind()'''
# В tkinter с помощью метода bind() между собой связываются виджет, событие и
# действие. Например, виджет – кнопка, событие – клик по ней левой кнопкой мыши,
# действие – отправка сообщения. Другой пример: виджет – текстовое поле,
# событие – нажатие Enter, действие – получение текста из поля методом get() для
# последующей обработки программой. Действие оформляют как функцию (или метод),
# которая вызываются при наступлении события.
# Один и тот же виджет можно связать с несколькими событиями. В примере ниже
# используется одна и та же функция-обработчик, однако могут быть и разные:
from tkinter import *

root = Tk()

def change(event):
    b['fg'] = "red"
    b['activeforeground'] = "red"

b = Button(text='RED', width=10, height=3)
b.bind('<Button-1>', change)
b.bind('<Return>', change)

b.pack()

root.mainloop()

'''Здесь цвет текста на кнопке меняется как при клике по ней (событие <Button-1>),
так и при нажатии клавиши Enter (событие <Return>). Однако Enter сработает, только
если кнопка предварительно получила фокус. В данном случае для этого надо один раз
нажать клавишу Tab. Иначе нажатие Enter будет относиться к окну, но не к кнопке.
У функций-обработчиков, которые вызываются через bind(), а не через свойство command,
должен быть обязательный параметр event, через который передается событие. Имя
event – соглашение, идентификатор может иметь другое имя, но обязательно должен стоять
на первом месте в функции, или может быть вторым в методе:'''

from tkinter import *

root = Tk()

class RedButton:
    def __init__(self):
        self.b = Button(text='RED', width=10, height=3)
        self.b.bind('<Button-1>', self.change)
        self.b.pack()
    def change(self, event):
        self.b['fg'] = "red"
        self.b['activeforeground'] = "red"

RedButton()

root.mainloop()
